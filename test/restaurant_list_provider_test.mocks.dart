// Mocks generated by Mockito 5.4.5 from annotations
// in find_restaurant/test/restaurant_list_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:find_restaurant/data/api/api_service.dart' as _i6;
import 'package:find_restaurant/data/model/detail_restaurant.dart' as _i4;
import 'package:find_restaurant/data/model/list_restaurant_response.dart'
    as _i2;
import 'package:find_restaurant/data/model/review.dart' as _i5;
import 'package:find_restaurant/data/model/search_list_restaurant.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRestaurantListResponse_0 extends _i1.SmartFake
    implements _i2.RestaurantListResponse {
  _FakeRestaurantListResponse_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSearchListResponse_1 extends _i1.SmartFake
    implements _i3.SearchListResponse {
  _FakeSearchListResponse_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDetailRestaurantResponse_2 extends _i1.SmartFake
    implements _i4.DetailRestaurantResponse {
  _FakeDetailRestaurantResponse_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeReviewListResponse_3 extends _i1.SmartFake
    implements _i5.ReviewListResponse {
  _FakeReviewListResponse_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i6.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.RestaurantListResponse> getListRestaurant() =>
      (super.noSuchMethod(
            Invocation.method(#getListRestaurant, []),
            returnValue: _i7.Future<_i2.RestaurantListResponse>.value(
              _FakeRestaurantListResponse_0(
                this,
                Invocation.method(#getListRestaurant, []),
              ),
            ),
          )
          as _i7.Future<_i2.RestaurantListResponse>);

  @override
  _i7.Future<_i3.SearchListResponse> searchRestaurant(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchRestaurant, [query]),
            returnValue: _i7.Future<_i3.SearchListResponse>.value(
              _FakeSearchListResponse_1(
                this,
                Invocation.method(#searchRestaurant, [query]),
              ),
            ),
          )
          as _i7.Future<_i3.SearchListResponse>);

  @override
  _i7.Future<_i4.DetailRestaurantResponse> getDetailRestaurant(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getDetailRestaurant, [id]),
            returnValue: _i7.Future<_i4.DetailRestaurantResponse>.value(
              _FakeDetailRestaurantResponse_2(
                this,
                Invocation.method(#getDetailRestaurant, [id]),
              ),
            ),
          )
          as _i7.Future<_i4.DetailRestaurantResponse>);

  @override
  _i7.Future<_i5.ReviewListResponse> postReview(
    String? id,
    String? name,
    String? review,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#postReview, [id, name, review]),
            returnValue: _i7.Future<_i5.ReviewListResponse>.value(
              _FakeReviewListResponse_3(
                this,
                Invocation.method(#postReview, [id, name, review]),
              ),
            ),
          )
          as _i7.Future<_i5.ReviewListResponse>);
}
